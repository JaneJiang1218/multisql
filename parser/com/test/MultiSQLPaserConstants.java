/* Generated By:JJTree&JavaCC: Do not edit this line. MultiSQLPaserConstants.java */
package test;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MultiSQLPaserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SELECT = 5;
  /** RegularExpression Id. */
  int WHERE = 6;
  /** RegularExpression Id. */
  int JOIN = 7;
  /** RegularExpression Id. */
  int LIKE = 8;
  /** RegularExpression Id. */
  int GROUP = 9;
  /** RegularExpression Id. */
  int ORDER = 10;
  /** RegularExpression Id. */
  int BY = 11;
  /** RegularExpression Id. */
  int VALUES = 12;
  /** RegularExpression Id. */
  int AND = 13;
  /** RegularExpression Id. */
  int OR = 14;
  /** RegularExpression Id. */
  int AS = 15;
  /** RegularExpression Id. */
  int IN = 16;
  /** RegularExpression Id. */
  int COUNT = 17;
  /** RegularExpression Id. */
  int SUM = 18;
  /** RegularExpression Id. */
  int AVG = 19;
  /** RegularExpression Id. */
  int MAX = 20;
  /** RegularExpression Id. */
  int MIN = 21;
  /** RegularExpression Id. */
  int BETWEEN = 22;
  /** RegularExpression Id. */
  int UNDERSCORE = 23;
  /** RegularExpression Id. */
  int COMMA = 24;
  /** RegularExpression Id. */
  int POINT = 25;
  /** RegularExpression Id. */
  int SEMICOLON = 26;
  /** RegularExpression Id. */
  int ALL = 27;
  /** RegularExpression Id. */
  int NEG = 28;
  /** RegularExpression Id. */
  int LEFTPARENTHESES = 29;
  /** RegularExpression Id. */
  int RIGHTPARENTHESES = 30;
  /** RegularExpression Id. */
  int EQUAL = 31;
  /** RegularExpression Id. */
  int LQUOTATION = 32;
  /** RegularExpression Id. */
  int LEFTQUOTATION = 33;
  /** RegularExpression Id. */
  int HIGHER = 34;
  /** RegularExpression Id. */
  int LOWER = 35;
  /** RegularExpression Id. */
  int EHIGHER = 36;
  /** RegularExpression Id. */
  int ELOWER = 37;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 38;
  /** RegularExpression Id. */
  int FLOAT_LITERAL = 39;
  /** RegularExpression Id. */
  int STRDIGITS = 40;
  /** RegularExpression Id. */
  int DIGIT = 41;
  /** RegularExpression Id. */
  int IDENTIFIER = 42;
  /** RegularExpression Id. */
  int LETTER = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"Select\"",
    "\"where\"",
    "\"Join\"",
    "\"like\"",
    "\"group\"",
    "\"order\"",
    "\"by\"",
    "\"values\"",
    "\"and\"",
    "\"or\"",
    "\"as\"",
    "\"in\"",
    "\"count\"",
    "\"sum\"",
    "\"avg\"",
    "\"max\"",
    "\"min\"",
    "\"between\"",
    "\"_\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"*\"",
    "\"-\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\">\"",
    "\"< \"",
    "\">=\"",
    "\"<=\"",
    "<INTEGER_LITERAL>",
    "<FLOAT_LITERAL>",
    "<STRDIGITS>",
    "<DIGIT>",
    "<IDENTIFIER>",
    "<LETTER>",
  };

}
